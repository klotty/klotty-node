name: rsnd
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  lint:
    runs-on: buildjet-4vcpu-ubuntu-2204
    container:
      image: node:18
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm setup
        uses: pnpm/action-setup@v3
      - name: Install packages
        run: pnpm install
      - name: Run Lint
        run: pnpm lint
  format:
    runs-on: buildjet-4vcpu-ubuntu-2204
    container:
      image: node:16
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm setup
        uses: pnpm/action-setup@v3
      - name: Install packages
        run: pnpm install
      - name: Run Format Check
        run: pnpm format:check
  build:
    runs-on: buildjet-4vcpu-ubuntu-2204
    container:
      image: node:16
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm setup
        uses: pnpm/action-setup@v3
      - name: Install packages
        run: pnpm install
      - name: Run Build
        run: pnpm build
  dependencies:
    runs-on: buildjet-4vcpu-ubuntu-2204
    container:
      image: node:16
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm setup
        uses: pnpm/action-setup@v3
      - name: Install packages
        run: pnpm
      - name: Check for pinned dependencies
        run: |
          node -e '
            const fs = require("fs");
            const pkg = JSON.parse(fs.readFileSync("package.json", "utf8"));
            const errors = [];

            function isPinned(version) {
              return /^\d+\.\d+\.\d+$|^[a-z]+:[a-z]+@\d+$/.test(version);
            }

            for (const [dep, version] of Object.entries(pkg.dependencies || {})) {
              if (!isPinned(version)) {
                errors.push(`Dependency "${dep}" is not pinned: "${version}"`);
              }
            }

            for (const [dep, version] of Object.entries(pkg.devDependencies || {})) {
              if (!isPinned(version)) {
                errors.push(`Dev dependency "${dep}" is not pinned: "${version}"`);
              }
            }

            if (errors.length > 0) {
              console.error(`\n${errors.join("\n")}\n`);
              process.exit(1);
            } else {
              console.log("All dependencies are pinned.");
            }
          '
